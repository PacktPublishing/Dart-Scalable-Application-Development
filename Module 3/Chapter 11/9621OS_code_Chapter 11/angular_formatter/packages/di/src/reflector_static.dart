library di.reflector_static;

import '../di.dart';

class GeneratedTypeFactories extends TypeReflector {

  Map<Type, Function> _factories;
  Map<Type, List<Key>> _parameterKeys;

  /**
   * This constructor should be called by code generated by transformer in main
   * with generated factories and paramKeys to initialize it.
   */
  GeneratedTypeFactories(Map<Type, Function> this._factories,
                           Map<Type, List<Key>>this._parameterKeys);

  Function factoryFor(Type type) {
    var keys = _factories[type];
    if (keys != null) return keys;
    throw new NoGeneratedTypeFactoryError(type);
  }

  List<Key> parameterKeysFor(Type type) {
    var keys = _parameterKeys[type];
    if (keys != null) return keys;
    throw new NoGeneratedTypeFactoryError(type);
  }

  void addAll(Map<Type, Function> factories, Map<Type, List<Key>> parameterKeys) {
    _factories.addAll(factories);
    _parameterKeys.addAll(parameterKeys);
  }

  void add(Type type, Function factory, List<Key> paramKeys) {
    _factories[type] = factory;
    _parameterKeys[type] = paramKeys;
  }
}
